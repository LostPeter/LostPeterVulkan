/****************************************************************************
* LostPeterVulkan - Copyright (C) 2022 by LostPeter
* 
* Author:   LostPeter
* Time:     2023-03-04
* Github:   https://github.com/LostPeter/LostPeterVulkan
* Document: https://www.zhihu.com/people/lostpeter/posts
*
* This code is licensed under the MIT license (MIT) (http://opensource.org/licenses/MIT)
****************************************************************************/

#include "../hlsl_common.hlsl"


[[vk::binding(0)]] cbuffer _textureInfo                         : register(b0)
{
    TextureCopyConstants _textureInfo;
}

[[vk::binding(1)]] Texture2DArray _textureSrc                   : register(t0);
[[vk::binding(2)]] RWTexture2D<float4> _textureDst              : register(u0);


float4 processLinear(float4 pixel)
{
	return float4(pow(abs(pixel.xyz), 1.0 / 2.2), pixel.w);
}

float4 LinearToSRGB(float4 pixel)
{
	float3 sRGBLo = pixel.xyz * 12.92;
	float3 sRGBHi = (pow(abs(pixel.xyz), float3(1.0 / 2.4, 1.0 / 2.4, 1.0 / 2.4)) * 1.055) - 0.055;
	float3 sRGB = select((pixel.xyz <= 0.0031308), sRGBLo, sRGBHi);
	return float4(sRGB, pixel.w);
}

[numthreads(8, 8, 1)]
void main(uint3 id : SV_DispatchThreadID)
{   
	int index = 0;
	uint2 coord = id.xy;
	if (id.x < _textureInfo.texInfo.x &&
		id.y < _textureInfo.texInfo.y)
	{
		index = _textureInfo.texIndexArray.x;
	}
	else if (id.x >= _textureInfo.texInfo.x &&
			 id.y < _textureInfo.texInfo.y)
	{
		index = _textureInfo.texIndexArray.y;
		coord.x -= _textureInfo.texInfo.x;
	}
	else if (id.x < _textureInfo.texInfo.x &&
			 id.y >= _textureInfo.texInfo.y)
	{
		index = _textureInfo.texIndexArray.z;
		coord.y -= _textureInfo.texInfo.y;
	}
	else
	{
		index = _textureInfo.texIndexArray.w;
		coord.x -= _textureInfo.texInfo.x;
		coord.y -= _textureInfo.texInfo.y;
	}

    float4 pixel = _textureSrc.Load(uint4(coord.xy, index, 0));
	if (_textureInfo.texInfo.w > 0)
	{
		pixel = LinearToSRGB(pixel);
	}
	_textureDst[id.xy] = pixel;
}