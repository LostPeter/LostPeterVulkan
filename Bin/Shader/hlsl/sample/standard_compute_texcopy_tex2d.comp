/****************************************************************************
* LostPeterVulkan - Copyright (C) 2022 by LostPeter
* 
* Author:   LostPeter
* Time:     2023-03-04
* Github:   https://github.com/LostPeter/LostPeterVulkan
* Document: https://www.zhihu.com/people/lostpeter/posts
*
* This code is licensed under the MIT license (MIT) (http://opensource.org/licenses/MIT)
****************************************************************************/

#include "../hlsl_common.hlsl"
#include "../hlsl_function.hlsl"


[[vk::binding(0)]] cbuffer _textureInfo                         : register(b0)
{
    TextureCopyConstants _textureInfo;
}

[[vk::binding(1)]] Texture2D _textureSrc                        : register(t0);
[[vk::binding(2)]] RWTexture2D<float4> _textureDst              : register(u0);


[numthreads(8, 8, 1)]
void main(uint3 id : SV_DispatchThreadID)
{
	uint coordX = id.x;
	uint coordY = id.y;
	if (coordX >= _textureInfo.texOffset.x &&
		coordX < _textureInfo.texOffset.x + _textureInfo.texInfo.x &&
		coordY >= _textureInfo.texOffset.y &&
		coordY < _textureInfo.texOffset.y + _textureInfo.texInfo.y)
	{
		float4 pixel = _textureSrc.Load(uint3(coordX - _textureInfo.texOffset.x, coordY - _textureInfo.texOffset.y, _textureInfo.texInfo.z));
		if (_textureInfo.texInfo.w > 0)
		{
			pixel = Func_LinearToSRGB(pixel);
		}
		_textureDst[uint2(coordX, coordY)] = pixel;
	}
	else
	{
		_textureDst[uint2(coordX, coordY)] = _textureInfo.texClearColor;
	}
}