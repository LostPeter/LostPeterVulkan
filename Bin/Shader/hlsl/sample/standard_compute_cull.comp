/****************************************************************************
* LostPeterVulkan - Copyright (C) 2022 by LostPeter
* 
* Author:   LostPeter
* Time:     2024-08-25
* Github:   https://github.com/LostPeter/LostPeterVulkan
* Document: https://www.zhihu.com/people/lostpeter/posts
*
* This code is licensed under the MIT license (MIT) (http://opensource.org/licenses/MIT)
****************************************************************************/

#include "../hlsl_common.hlsl"


[[vk::binding(0)]] cbuffer _textureInfo                         : register(b0)
{
    TextureCopyConstants _textureInfo;
}

[[vk::binding(1)]] Texture2D _textureSrc                        : register(t0);
[[vk::binding(2)]] RWTexture2D<float4> _textureDst              : register(u0);


float3 GetPosition(uint2 coord)
{
	float w = _textureInfo.texInfo.x;
	float h = _textureInfo.texInfo.y;
	float height = _textureSrc[coord].r;
	return float3(coord.x / w, height, coord.y / h);
}

float3 GetNormal(float3 v1, float3 v2)
{
	return normalize(-cross(v1, v2)).xyz;
}

[numthreads(8, 8, 1)]
void main(uint3 id : SV_DispatchThreadID)
{
	float w = _textureInfo.texInfo.x;
	float h = _textureInfo.texInfo.y;
	if (id.x >= (uint)w ||
		id.y >= (uint)h)
	{
		return;
	}

	uint2 coord = id.xy;
	float3 p0 = GetPosition(coord);
	float3 v1 = GetPosition(coord + uint2(1, 0)) - p0;
	float3 v2 = GetPosition(coord + uint2(0, 1)) - p0;
	float3 v3 = GetPosition(coord + uint2(-1, 0)) - p0;
	float3 v4 = GetPosition(coord + uint2(0, -1)) - p0;
	float3 normal;
	if (id.x == 0 ||
		id.x == (uint)(w - 1) ||
		id.y == 0 ||
		id.y == (uint)(h - 1))
	{
		normal = float3(0, 1, 0);
	}
	else
	{
		normal = GetNormal(v1, v2) + GetNormal(v2, v3) + GetNormal(v3, v4) + GetNormal(v4, v1);
	}

	normal = normalize(normal);
	normal = (normal + 1) * 0.5;
	_textureDst[coord] = float4(normal.xyz, 1);
}