/****************************************************************************
* LostPeterVulkan - Copyright (C) 2022 by LostPeter
* 
* Author:   LostPeter
* Time:     2024-09-07
* Github:   https://github.com/LostPeter/LostPeterVulkan
* Document: https://www.zhihu.com/people/lostpeter/posts
*
* This code is licensed under the MIT license (MIT) (http://opensource.org/licenses/MIT)
****************************************************************************/

#include "../hlsl_common.hlsl"


[[vk::binding(0)]] cbuffer hizDepthConstants                   	: register(b0)
{
    HizDepthConstants hizDepthConstants;
}

[[vk::binding(1)]] RWTexture2D<float> _textureSrc              	: register(u0);
[[vk::binding(2)]] RWTexture2D<float> _textureDst              	: register(u1);


[numthreads(8, 8, 1)]
void main(uint2 id : SV_DispatchThreadID)
{	
	if ((float)id.x > hizDepthConstants.vRtDepthSize.x || (float)id.y > hizDepthConstants.vRtDepthSize.y)
        return;

    uint2 idOri = id * 2;
    float4 value = float4(_textureSrc[idOri + uint2(0, 0)],
						  _textureSrc[idOri + uint2(1, 0)],
						  _textureSrc[idOri + uint2(1, 1)],
						  _textureSrc[idOri + uint2(0, 1)]);
	
	if (hizDepthConstants.vRtDepthSize.w < 1)
	{
		value.xy = min(value.xy, value.zw);
    	_textureDst[id] = min(value.x, value.y);
	}
	else
	{	
		value.xy = max(value.xy, value.zw);
    	_textureDst[id] = max(value.x, value.y);
	}
}